generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model Owner {
  id               Int        @id @default(autoincrement())
  name             String
  email            String     @unique
  password         String
  verified         Boolean    @default(false)
  createdAt        DateTime   @default(now())
  verificationCode String?
  postalCode       PostalCode @map("postal_code")
  dogs             Dog[]
  sessions         Session[]
}

model Session {
  id        Int      @id @default(autoincrement())
  token     String   @unique
  userId    Int
  expiresAt DateTime
  createdAt DateTime @default(now())
  user      Owner    @relation(fields: [userId], references: [id])

  @@index([userId])
}

model Dog {
  id            Int             @id @default(autoincrement())
  name          String
  size          DogSize
  birthDate     DateTime
  createdAt     DateTime        @default(now())
  updatedAt     DateTime        @updatedAt
  ownerId       Int
  activityLevel ActivityLevel
  image         String?
  owner         Owner           @relation(fields: [ownerId], references: [id])
  preferences   DogPreferences?

  @@index([ownerId])
}

model DogPreferences {
  id                Int     @id @default(autoincrement())
  prefersSmallDogs  Boolean @default(true)
  prefersMediumDogs Boolean @default(true)
  prefersLargeDogs  Boolean @default(true)
  prefersPuppy      Boolean @default(true)
  prefersYoung      Boolean @default(true)
  prefersAdult      Boolean @default(true)
  prefersSenior     Boolean @default(true)
  dogId             Int     @unique
  dog               Dog     @relation(fields: [dogId], references: [id], onDelete: Cascade)
}

enum PostalCode {
  PLZ_1010
  PLZ_1020
  PLZ_1030
  PLZ_1040
  PLZ_1050
  PLZ_1060
  PLZ_1070
  PLZ_1080
  PLZ_1090
  PLZ_1100
  PLZ_1110
  PLZ_1120
  PLZ_1130
  PLZ_1140
  PLZ_1150
  PLZ_1160
  PLZ_1170
  PLZ_1180
  PLZ_1190
  PLZ_1200
  PLZ_1210
  PLZ_1220
  PLZ_1230
}

enum DogSize {
  SMALL
  MEDIUM
  LARGE
}

enum AgeGroup {
  PUPPY
  YOUNG
  ADULT
  SENIOR
}

enum ActivityLevel {
  LOW
  MODERATE
  HIGH
}
